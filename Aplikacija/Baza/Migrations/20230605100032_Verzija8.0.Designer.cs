// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace Aplikacija.Migrations
{
    [DbContext(typeof(PartyMakerContext))]
    [Migration("20230605100032_Verzija8.0")]
    partial class Verzija80
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Nalog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("Admin")
                        .HasColumnType("bit");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicnoIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Nalozi");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Nalog");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Models.Narudzbina", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Drzava")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailKup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicnoIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostanskiBroj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PotI")
                        .HasColumnType("int");

                    b.Property<int?>("PotrosacID")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusPorudzine")
                        .HasColumnType("int");

                    b.Property<double>("Suma")
                        .HasColumnType("float");

                    b.Property<DateTime>("VremeKreiranja")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("PotrosacID");

                    b.ToTable("Narudzbine");
                });

            modelBuilder.Entity("Models.ONama", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ONama");
                });

            modelBuilder.Entity("Models.Proizvod", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<double>("Cena")
                        .HasColumnType("float");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DostupnaKolicina")
                        .HasColumnType("int");

                    b.Property<string>("KratakOpis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Proizvodjac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slika")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VremeDodavanja")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Proizvodi");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Proizvod");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Models.ProizvodNarudzbine", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int?>("NarudzbinaID")
                        .HasColumnType("int");

                    b.Property<int>("ProizvodID")
                        .HasColumnType("int");

                    b.Property<double>("UkupnaCena")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("NarudzbinaID");

                    b.ToTable("ProizvodNarudzbine");
                });

            modelBuilder.Entity("Models.Administrator", b =>
                {
                    b.HasBaseType("Models.Nalog");

                    b.Property<string>("JMBG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pozicija")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Administrator");
                });

            modelBuilder.Entity("Models.Potrosac", b =>
                {
                    b.HasBaseType("Models.Nalog");

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Drzava")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostanskiBroj")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Potrosac");
                });

            modelBuilder.Entity("Models.Pice", b =>
                {
                    b.HasBaseType("Models.Proizvod");

                    b.Property<double>("Litraza")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue("Pice");
                });

            modelBuilder.Entity("Models.Rekviziti", b =>
                {
                    b.HasBaseType("Models.Proizvod");

                    b.Property<int>("Tip")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Rekviziti");
                });

            modelBuilder.Entity("Models.AlkoholnoPice", b =>
                {
                    b.HasBaseType("Models.Pice");

                    b.Property<double>("ProcenatAlkohola")
                        .HasColumnType("float");

                    b.Property<int>("Vrsta")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("AlkoholnoPice");
                });

            modelBuilder.Entity("Models.BezalkoholnoPice", b =>
                {
                    b.HasBaseType("Models.Pice");

                    b.Property<bool>("Gazirano")
                        .HasColumnType("bit");

                    b.Property<int>("Ukus")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("BezalkoholnoPice");
                });

            modelBuilder.Entity("Models.Narudzbina", b =>
                {
                    b.HasOne("Models.Potrosac", null)
                        .WithMany("Narudzbine")
                        .HasForeignKey("PotrosacID");
                });

            modelBuilder.Entity("Models.ProizvodNarudzbine", b =>
                {
                    b.HasOne("Models.Narudzbina", null)
                        .WithMany("SviProizvodiNarudzbine")
                        .HasForeignKey("NarudzbinaID");
                });

            modelBuilder.Entity("Models.Narudzbina", b =>
                {
                    b.Navigation("SviProizvodiNarudzbine");
                });

            modelBuilder.Entity("Models.Potrosac", b =>
                {
                    b.Navigation("Narudzbine");
                });
#pragma warning restore 612, 618
        }
    }
}
